#!/usr/bin/env ruby

require 'bundler/setup'
require 'optparse'
require 'vsphere-automation-vcenter'
require 'vsphere-automation-cis'

options = { insecure: false }
OptionParser.new do |opts|
  opts.on('-s SERVER', '--server SERVER', 'vCenter server to use') do |s|
    options[:server] = s
  end

  opts.on('-u USERNAME', '--username USERNAME', 'username to use') do |u|
    options[:username] = u
  end

  opts.on('-p PASSWORD', '--password PASSWORD', 'password to use') do |p|
    options[:password] = p
  end

  opts.on('-k', '--insecure', 'skip certificate validation') do |k|
    options[:insecure] = k
  end

  opts.on('--scheme SCHEME', 'URL scheme to use') do |scheme|
    options[:scheme] = scheme
  end
end.parse!

configuration = VSphereAutomation::Configuration.new.tap do |c|
  c.host = options[:server]
  c.username = options[:username]
  c.password = options[:password]
  c.scheme = options.fetch(:scheme, 'https')
  c.verify_ssl = !options[:insecure]
  c.verify_ssl_host = !options[:insecure]
end

api_client = VSphereAutomation::ApiClient.new(configuration)
VSphereAutomation::CIS::SessionApi.new(api_client).create('')

vm_api = VSphereAutomation::VCenter::VMApi.new(api_client)
vms = vm_api.list

puts 'List of VMs'
puts '-----------'

vms.value.each do |vm|
  puts "#{vm.name} (#{vm.vm})"
end
