# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# stats - No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)


require 'date'

module VSphereAutomation
  module VStats
    class VstatsCounterMetadataUnitsFactor
    
    YOTTA = "YOTTA".freeze
    ZETTA = "ZETTA".freeze
    EXA = "EXA".freeze
    PETA = "PETA".freeze
    TERA = "TERA".freeze
    GIGA = "GIGA".freeze
    MEGA = "MEGA".freeze
    KILO = "KILO".freeze
    HECTO = "HECTO".freeze
    DECA = "DECA".freeze
    ONE = "ONE".freeze
    DECI = "DECI".freeze
    CENTI = "CENTI".freeze
    MILLI = "MILLI".freeze
    MICRO = "MICRO".freeze
    NANO = "NANO".freeze
    PIKO = "PIKO".freeze
    FEMTO = "FEMTO".freeze
    ATTO = "ATTO".freeze
    ZEPTO = "ZEPTO".freeze
    YOCTO = "YOCTO".freeze
    YOBI = "YOBI".freeze
    ZEBI = "ZEBI".freeze
    EXBI = "EXBI".freeze
    PEBI = "PEBI".freeze
    TEBI = "TEBI".freeze
    GIBI = "GIBI".freeze
    MEBI = "MEBI".freeze
    KIBI = "KIBI".freeze

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      constantValues = VstatsCounterMetadataUnitsFactor.constants.select { |c| VstatsCounterMetadataUnitsFactor::const_get(c) == value }
      raise "Invalid ENUM value #{value} for class #VstatsCounterMetadataUnitsFactor" if constantValues.empty?
      value
    end
  end
  end
end
