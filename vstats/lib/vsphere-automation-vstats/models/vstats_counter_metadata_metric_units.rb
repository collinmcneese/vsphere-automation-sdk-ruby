# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# stats - No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)


require 'date'

module VSphereAutomation
  module VStats
    class VstatsCounterMetadataMetricUnits
    
    PERCENT = "PERCENT".freeze
    NUMBER = "NUMBER".freeze
    SECOND = "SECOND".freeze
    HERTZ = "HERTZ".freeze
    METER = "METER".freeze
    METERSPERSECOND = "METERSPERSECOND".freeze
    METERSPERSECONDSQUARED = "METERSPERSECONDSQUARED".freeze
    BYTE = "BYTE".freeze
    BIT = "BIT".freeze
    BYTESPERSECOND = "BYTESPERSECOND".freeze
    BITSPERSECOND = "BITSPERSECOND".freeze
    KILOGRAM = "KILOGRAM".freeze
    GRAM = "GRAM".freeze
    CELSIUS = "CELSIUS".freeze
    KELVIN = "KELVIN".freeze
    JOULE = "JOULE".freeze
    WATT = "WATT".freeze
    VOLT = "VOLT".freeze
    AMPERE = "AMPERE".freeze
    VOLTAMPERE = "VOLTAMPERE".freeze
    CANDELA = "CANDELA".freeze
    MOLE = "MOLE".freeze

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      constantValues = VstatsCounterMetadataMetricUnits.constants.select { |c| VstatsCounterMetadataMetricUnits::const_get(c) == value }
      raise "Invalid ENUM value #{value} for class #VstatsCounterMetadataMetricUnits" if constantValues.empty?
      value
    end
  end
  end
end
