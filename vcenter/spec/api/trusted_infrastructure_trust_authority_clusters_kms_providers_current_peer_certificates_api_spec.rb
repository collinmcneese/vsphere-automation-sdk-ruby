# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# vcenter - VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::VCenter::TrustedInfrastructureTrustAuthorityClustersKmsProvidersCurrentPeerCertificatesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TrustedInfrastructureTrustAuthorityClustersKmsProvidersCurrentPeerCertificatesApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::VCenter::TrustedInfrastructureTrustAuthorityClustersKmsProvidersCurrentPeerCertificatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TrustedInfrastructureTrustAuthorityClustersKmsProvidersCurrentPeerCertificatesApi' do
    it 'should create an instance of TrustedInfrastructureTrustAuthorityClustersKmsProvidersCurrentPeerCertificatesApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::VCenter::TrustedInfrastructureTrustAuthorityClustersKmsProvidersCurrentPeerCertificatesApi)
    end
  end

  # unit tests for list_task
  # Return the remote server certificates.   Contacts the configured key servers and attempts to retrieve their certificates. These certificates might not yet be trusted.    If the returned certificates are to be considered trustworthy, then it must be added to the list of trusted server certificates by adding to the certificates returned by TrustedPeerCertificates.get and invoking TrustedPeerCertificates.update with the updated list of certificates. 
  # @param cluster Identifier of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource.
  # @param provider Identifier of the provider. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.kms.Provider.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :server_names Names that key server must have to match the filter (see CurrentPeerCertificates.Summary.server-name). If unset or empty, key servers with any name match the filter.
  # @option opts [Boolean] :trusted Trust status that server certificates must have to match the filter (see CurrentPeerCertificates.Summary.trusted). If unset, trusted and untrusted server certificates match the filter.
  # @return [String]
  describe 'list_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
