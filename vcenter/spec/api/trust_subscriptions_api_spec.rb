# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# vcenter - VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::VCenter::TrustSubscriptionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TrustSubscriptionsApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::VCenter::TrustSubscriptionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TrustSubscriptionsApi' do
    it 'should create an instance of TrustSubscriptionsApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::VCenter::TrustSubscriptionsApi)
    end
  end

  # unit tests for add
  # Add a new subscription record into database. There are two possible situations for add. A. In the first case, the client is only interested in one VCTrust object and the VCTrust object has to exist in database. To make such a subscription, the client need to tell database which VCTrust object he is interested in. The GUID (VCTrust Id) field stands for that specific VCTrust and need to be specified. In this way, the client will only receive notification from that specified object changes. There is no limit on how many subscription an endpoint can add. B. In the second case, the client makes a subscription without a specified VCTrust object, which means the client is interested in every VCTrust object. Whenever the database changes (e.g add a new VCTrust, delete VCTrust, update...), the client gets notified. All the records in the database will not be deleted automatically. The only way to delete a record is to invoke delete API. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
  # @param request_body 
  # @param [Hash] opts the optional parameters
  # @return [VcenterTrustSubscriptionsAddResp]
  describe 'add test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # If the client is no longer interested in the subscription, it can delete it by invoking this API and specify the subscription id. The subscription id is returned to the endpoint when it was created. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
  # @param subscription The subscription id indicates which subscription to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for info
  # This API is used by client to request for detailed information of a specific susbcription. It is queried using subscription id. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
  # @param subscription 
  # @param [Hash] opts the optional parameters
  # @return [VcenterTrustSubscriptionsInfoResp]
  describe 'info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # List all the subscriptions that a client have. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
  # @param [Hash] opts the optional parameters
  # @return [VcenterTrustSubscriptionsListResp]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # This API is used by client to renew a subscription by extend the expiration time of its existing subscriptions. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
  # @param subscription_id To indicate which subscription to renew
  # @param [Hash] opts the optional parameters
  # @return [VcenterTrustSubscriptionsUpdateResp]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
