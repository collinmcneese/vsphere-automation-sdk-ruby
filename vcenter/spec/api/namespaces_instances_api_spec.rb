# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# vcenter - VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::VCenter::NamespacesInstancesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'NamespacesInstancesApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::VCenter::NamespacesInstancesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NamespacesInstancesApi' do
    it 'should create an instance of NamespacesInstancesApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::VCenter::NamespacesInstancesApi)
    end
  end

  # unit tests for create
  # Create namespace object in the cluster.
  # @param [Hash] opts the optional parameters
  # @option opts [VcenterNamespacesInstancesCreateSpec] :request_body 
  # @return [nil]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Delete the namespace object in the cluster.
  # @param namespace Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Returns information about a specific namespace.
  # @param namespace Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance.
  # @param [Hash] opts the optional parameters
  # @return [VcenterNamespacesInstancesInfo]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Returns the information about all namespaces on this vCenter.
  # @param [Hash] opts the optional parameters
  # @return [Array<VcenterNamespacesInstancesSummary>]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set
  # Set a new configuration on the namespace object. The specified configuration is applied in entirety and will replace the current configuration fully.
  # @param namespace Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance.
  # @param [Hash] opts the optional parameters
  # @option opts [VcenterNamespacesInstancesSetSpec] :request_body 
  # @return [nil]
  describe 'set test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update the namespace object. The specified configuration is applied partially and unset fields in spec will leave those parts of configuration as-is.
  # @param namespace Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance.
  # @param [Hash] opts the optional parameters
  # @option opts [VcenterNamespacesInstancesUpdateSpec] :request_body 
  # @return [nil]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
