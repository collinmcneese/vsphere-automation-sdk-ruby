# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# appliance - The vCenter Server Appliance is a preconfigured Linux-based virtual machine optimized for running vCenter Server and associated services.


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::Appliance::InfraprofileConfigsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'InfraprofileConfigsApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::Appliance::InfraprofileConfigsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InfraprofileConfigsApi' do
    it 'should create an instance of InfraprofileConfigsApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::Appliance::InfraprofileConfigsApi)
    end
  end

  # unit tests for export
  # Exports the desired profile specification. if you do not have all of the privileges described as follows:     -  Operation execution requires Infraprofile.Read.  
  # @param [Hash] opts the optional parameters
  # @option opts [ApplianceInfraprofileConfigsProfilesSpec] :request_body 
  # @return [String]
  describe 'export test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_profile_task
  # Imports the desired profile specification.
  # @param [Hash] opts the optional parameters
  # @option opts [ApplianceInfraprofileConfigsImportProfileSpec] :request_body 
  # @return [String]
  describe 'import_profile_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # List all the profiles which are registered. if you do not have all of the privileges described as follows:     -  Operation execution requires Infraprofile.Read.  
  # @param [Hash] opts the optional parameters
  # @return [Array<ApplianceInfraprofileConfigsProfileInfo>]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_task
  # Validates the desired profile specification.
  # @param [Hash] opts the optional parameters
  # @option opts [ApplianceInfraprofileConfigsImportProfileSpec] :request_body 
  # @return [String]
  describe 'validate_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
