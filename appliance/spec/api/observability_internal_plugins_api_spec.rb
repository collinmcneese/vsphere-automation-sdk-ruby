# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# appliance - The vCenter Server Appliance is a preconfigured Linux-based virtual machine optimized for running vCenter Server and associated services.


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::Appliance::ObservabilityInternalPluginsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ObservabilityInternalPluginsApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::Appliance::ObservabilityInternalPluginsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ObservabilityInternalPluginsApi' do
    it 'should create an instance of ObservabilityInternalPluginsApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::Appliance::ObservabilityInternalPluginsApi)
    end
  end

  # unit tests for create
  # Adds plugin into observability. if you do not have all of the privileges described as follows:     -  Operation execution requires Observability.Admin.  
  # @param [Hash] opts the optional parameters
  # @option opts [ApplianceObservabilityInternalPluginsCreateSpec] :request_body 
  # @return [nil]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Removes the plugin from observability plugin list. if you do not have all of the privileges described as follows:     -  Operation execution requires Observability.Admin.  
  # @param name Identifier of the plugin to be removed. The parameter must be an identifier for the resource type: appliance.observability.plugin.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Gets detailed info about the particular plugin. if you do not have all of the privileges described as follows:     -  Operation execution requires Observability.Admin.  
  # @param name Identifier of the plugin for which information will be returned. The parameter must be an identifier for the resource type: appliance.observability.plugin.
  # @param [Hash] opts the optional parameters
  # @return [ApplianceObservabilityInternalPluginsInfo]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Lists all the plugins in Observability. if you do not have all of the privileges described as follows:     -  Operation execution requires Observability.Admin.  
  # @param [Hash] opts the optional parameters
  # @return [Array<ApplianceObservabilityInternalPluginsSummary>]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_names
  # Lists all the plugin names exists in Observability. if you do not have all of the privileges described as follows:     -  Operation execution requires Observability.Admin.  
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'list_names test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Updates plugin details, expects all the required info of the plugin as part of spec not just the field/s that needs to be updated. if you do not have all of the privileges described as follows:     -  Operation execution requires Observability.Admin.  
  # @param name Identifier of the plugin to be updated. The parameter must be an identifier for the resource type: appliance.observability.plugin.
  # @param [Hash] opts the optional parameters
  # @option opts [ApplianceObservabilityInternalPluginsUpdateSpec] :request_body 
  # @return [nil]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
