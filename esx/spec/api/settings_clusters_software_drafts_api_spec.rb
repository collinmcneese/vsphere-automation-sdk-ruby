# Copyright (c) 2018-2019 VMware, Inc.  All Rights Reserved.
# SPDX-License-Identifier: MIT

# DO NOT MODIFY. THIS CODE IS GENERATED. CHANGES WILL BE OVERWRITTEN.

# esx - No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)


require 'spec_helper'
require 'json'

# Unit tests for VSphereAutomation::ESX::SettingsClustersSoftwareDraftsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SettingsClustersSoftwareDraftsApi' do
  before do
    # run before each test
    @instance = VSphereAutomation::ESX::SettingsClustersSoftwareDraftsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SettingsClustersSoftwareDraftsApi' do
    it 'should create an instance of SettingsClustersSoftwareDraftsApi' do
      expect(@instance).to be_instance_of(VSphereAutomation::ESX::SettingsClustersSoftwareDraftsApi)
    end
  end

  # unit tests for commit_task
  # Commits the specified draft as the desired state document. The result of this operation can be queried by calling the cis/tasks/{task-id} where the task-id is the response of this operation.
  # @param cluster Identifier of the cluster.
  # @param draft Identifier of the draft.
  # @param [Hash] opts the optional parameters
  # @option opts [EsxSettingsClustersSoftwareDraftsCommitSpec] :request_body 
  # @return [String]
  describe 'commit_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Creates a new software draft from the desired document. It will be deleted, when the draft is committed successfully. If a desired document is missing, then this {@term operation} will create an empty draft.
  # @param cluster Identifier of the cluster
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # Deletes the software draft.
  # @param cluster Identifier of the cluster
  # @param draft Identifier of the working copy of the document.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Returns the information about given software draft.
  # @param cluster Identifier of the cluster.
  # @param draft Identifier of the software draft.
  # @param [Hash] opts the optional parameters
  # @return [EsxSettingsClustersSoftwareDraftsInfo]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_software_spec
  # Imports the desired software specification as a new draft. If a desired document is missing, then this {@term operation} will create an empty draft except when the source type is of either {@link SourceType#LATEST_RECOMMENDATION} or {@link SourceType#CURRENT_SERIES_RECOMMENDATION}, then {@link NotFound} error is reported. In addition, the exisiting draft will be overwritten when the source type is of either {@name SourceType#LATEST_RECOMMENDATION} or {@name SourceType#CURRENT_SERIES_RECOMMENDATION}.
  # @param cluster Identifier of the cluster.
  # @param [Hash] opts the optional parameters
  # @option opts [EsxSettingsClustersSoftwareDraftsImportSpec] :request_body 
  # @return [String]
  describe 'import_software_spec test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # Returns information about the software drafts for the specified cluster that match the {@link FilterSpec}.
  # @param cluster Identifier of the cluster.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :owners Owners of the drafts.
  # @return [Hash<String, EsxSettingsClustersSoftwareDraftsSummary>]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for scan_task
  # Scans all the hosts in the cluster against the software draft. The result of this operation can be queried by calling the cis/tasks/{task-id} where the task-id is the response of this operation.
  # @param cluster Identifier of the cluster.
  # @param draft Identifier of the working copy of the document.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'scan_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_task
  # Validates the software draft. The result of this operation can be queried by calling the cis/tasks/{task-id} where the task-id is the response of this operation.
  # @param cluster Identifier of the cluster.
  # @param draft Identifier of the software draft.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'validate_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
